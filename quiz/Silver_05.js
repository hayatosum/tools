const JAVA_SILVER_1Z0_815_JPN_05 = {
    prefix: "1Z0-815-JPN_05",
    questions: [
        {
            id: 1,
            category: "配列の操作",
            difficulty: "初級",
            question:
                "次のプログラムをコンパイル、実行したときの結果として、正しいものを選びなさい。（1つ選択）",
            code: " 1. public class Main {\n 2.     public static void main(String[] args) {\n 3.         int[] array = new int[0];\n 4.         System.out.println(array);\n 5.     }\n 6. }",
            choices: [
                "0が表示される",
                "nullが表示される",
                "何も表示されない",
                "[]が表示される",
                "ハッシュコードが表示される",
                "コンパイルエラーが発生する",
                "実行時に例外がスローされる",
            ],
            answerIndex: 4,
            explanation:
                "配列を直接出力すると toString() が呼ばれ、型情報とハッシュコードが表示される。",
        },
        {
            id: 2,
            category: "配列の操作",
            difficulty: "中級",
            question: "次のプログラムの説明として、正しいものを選びなさい。（1つ選択）",
            code: " 1. public class Main {\n 2.     public static void main(String[] args) {\n 3.         int[] a;\n 4.         int b[];\n 5.         int[][] c;\n 6.         int d[][];\n 7.         int[] e[];\n 8.         int[][] f[];\n 9.     }\n10. }",
            choices: [
                "3行目でコンパイルエラーが発生する",
                "4行目でコンパイルエラーが発生する",
                "5行目でコンパイルエラーが発生する",
                "6行目でコンパイルエラーが発生する",
                "4行目と6行目でコンパイルエラーが発生する",
                "7行目と8行目でコンパイルエラーが発生する",
                "コンパイルエラーは発生しない",
            ],
            answerIndex: 6,
            explanation:
                "Javaでは多次元配列の宣言方法は複数あるが、すべて有効でコンパイルエラーにはならない。",
        },
        {
            id: 3,
            category: "配列の操作",
            difficulty: "初級",
            question: "配列変数の宣言として、正しいものを選びなさい。（1つ選択）",
            code: "",
            choices: [
                "int[] a[3];",
                "int b[2];",
                "int[2] c[];",
                "int d[3][];",
                "他選択肢の宣言すべてが誤りである",
                "他選択肢の宣言すべて正しい",
            ],
            answerIndex: 4,
            explanation: "Javaでは配列のサイズを宣言時に指定できない。",
        },
        {
            id: 4,
            category: "配列の操作",
            difficulty: "中級",
            question: "次の中から、コンパイルエラーになるコードを選びなさい。（3つ選択）",
            code: "",
            choices: [
                "<code>int[] a = new int[2][3];</code>",
                "<code>int[] b = new int[2,3];</code>",
                "<code>int c[] = new int[2 * 3];</code>",
                "<code>int x = 2, y = 3;\nint[] d = new int[x * y];</code>",
                "<code>int[][] e = new int[2][];</code>",
                "<code>int f[][] = new int[][3];</code>",
            ],
            answerIndex: [0, 1, 5],
            explanation: "配列インスタンスの生成には、必ず扱える要素数を指定しなければならない。",
        },
        {
            id: 5,
            category: "配列の操作",
            difficulty: "中級",
            question:
                "次のプログラムをコンパイル、実行したときの結果として正しいものを選びなさい。（1つ選択）",
            code: " 1. public class Item {\n 2.     String name;\n 3.     int price = 100;\n 4. }\n\n 1. public class Main {\n 2.     public static void main(String[] args) {\n 3.         Item[] items = new Item[3];\n 4.         int total = 0;\n 5.         for (int i = 0; i < items.length; i++) {\n 6.             total += items[i].price;\n 7.         }\n 8.         System.out.println(total);\n 9.     }\n10. }",
            choices: [
                "0が表示される",
                "200が表示される",
                "300が表示される",
                "コンパイルエラーが発生する",
                "実行時に例外がスローされる",
            ],
            answerIndex: 4,
            explanation:
                "items[i] は null のため、price へアクセスすると NullPointerException が発生する。",
        },
        {
            id: 6,
            category: "配列の操作",
            difficulty: "中級",
            question:
                "次のプログラムをコンパイル、実行したときの結果として正しいものを選びなさい。（1つ選択）",
            code: ' 1. public class Main {\n 2.     public static void main(String[] args) {\n 3.         String[] array = {"A", "B", "C", "D"};\n 4.         array[0] = null;\n 5.         for (String str : array) {\n 6.             System.out.print(str);\n 7.         }\n 8.     }\n 9. }',
            choices: [
                "ABCDと表示される",
                "BCDと表示される",
                "nullBCDと表示される",
                "nullと表示される",
                "コンパイルエラーが発生する",
                "実行時に例外がスローされる",
            ],
            answerIndex: 2,
            explanation: "配列の最初の要素が null なので、出力は nullBCD となる。",
        },
        {
            id: 7,
            category: "配列の操作",
            difficulty: "上級",
            question: "次の中から、コンパイルエラーにならないコードを選びなさい。（3つ選択）",
            code: "",
            choices: [
                "<code>int[] a = new int[2]{ 2, 3 };</code>",
                "<code>int b[][] = {};</code>",
                "<code>int[][][] c = new int[1][][];</code>",
                "<code>int[] d;\nd = new int[]{2,3};</code>",
                "<code>int e[];\ne = {2,3};</code>",
            ],
            answerIndex: [2, 3, 1],
            explanation:
                "newと初期化子の両方を使う場合、[]の中に要素数を指定するとコンパイルエラーになる。",
        },
        {
            id: 8,
            category: "配列の操作",
            difficulty: "中級",
            question:
                "次のプログラムをコンパイル、実行したときの結果として正しいものを選びなさい。（1つ選択）",
            code: ' 1. public class Main {\n 2.     public static void main(String[] args) {\n 3.         String[] array = {"A", "B", null, "C", "D", "E"};\n 4.         int total = 0;\n 5.         for (String tmp : array) {\n 6.             total += tmp.length();\n 7.         }\n 8.         System.out.println(total);\n 9.     }\n10. }',
            choices: [
                "0が表示される",
                "5が表示される",
                "9が表示される",
                "コンパイルエラーが発生する",
                "実行時に例外がスローされる",
            ],
            answerIndex: 4,
            explanation:
                "null の要素に対して length() を呼び出すと NullPointerException が発生する。",
        },
        {
            id: 9,
            category: "配列の操作",
            difficulty: "上級",
            question:
                "次のプログラムをコンパイル、実行したときの結果として正しいものを選びなさい。（1つ選択）",
            code: " 1. public interface A {}\n\n 1. public abstract class B implements A {}\n\n 1. public class C extends B {}\n\n 1. public class D extends C {}\n\n 1. public class Main {\n 2.     public static void main(String[] args) {\n 3.         A[] array = { new C(), null, new D() };\n 4.         Object[] objArray = array;\n 5.     }\n 6. }",
            choices: [
                "Mainクラスの3行目でコンパイルエラーが発生する",
                "Mainクラスの4行目でコンパイルエラーが発生する",
                "実行時に例外がスローされる",
                "コンパイルも実行もできる",
            ],
            answerIndex: 3,
            explanation:
                "インターフェース型の配列はObject[]に代入可能であり、コンパイル・実行ともに成功する。",
        },
        {
            id: 10,
            category: "配列の操作",
            difficulty: "上級",
            question:
                "次のプログラムをコンパイル、実行したときの結果として正しいものを選びなさい。（1つ選択）",
            code: " 1. public class Main {\n 2.     public static void main(String[] args) {\n 3.         int[][] arrayA = { {1,2}, {1,2}, {1,2,3} };\n 4.         int[][] arrayB = arrayA.clone();\n 5.         int total = 0;\n 6.         for (int[] tmp : arrayB) {\n 7.             for (int val : tmp) {\n 8.                 total += val;\n 9.             }\n10.         }\n11.         System.out.println(total);\n12.     }\n13. }",
            choices: [
                "0が表示される",
                "12が表示される",
                "コンパイルエラーが発生する",
                "実行時に例外がスローされる",
            ],
            answerIndex: 1,
            explanation: "arrayAは2+2+3=7要素を持ち、外側の配列長を含め合計12が出力される。",
        },
    ],
};
